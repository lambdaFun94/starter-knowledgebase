const SchemaWrapper = (json) => {
  return `<script type="application/ld+json">
  ${JSON.stringify(json)}
  <\/script>`;
};

const BaseSchema = (data, schemaType) => {
  return {
    "@context": "https://schema.org",
    "@type": schemaType,
    name: data.document.name
  };
};

var __defProp$3 = Object.defineProperty;
var __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;
var __hasOwnProp$3 = Object.prototype.hasOwnProperty;
var __propIsEnum$3 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$3 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$3.call(b, prop))
      __defNormalProp$3(a, prop, b[prop]);
  if (__getOwnPropSymbols$3)
    for (var prop of __getOwnPropSymbols$3(b)) {
      if (__propIsEnum$3.call(b, prop))
        __defNormalProp$3(a, prop, b[prop]);
    }
  return a;
};
const Address = (address) => {
  return address && {
    address: {
      "@type": "PostalAddress",
      "streetAddress": address.line1,
      "addressLocality": address.city,
      "addressRegion": address.region,
      "postalCode": address.postalCode,
      "addressCountry": address.countryCode
    }
  };
};
const Location = (location) => {
  return location && __spreadValues$3({
    "@type": "Place",
    "name": location.name
  }, Address(location.address));
};

const PhotoGallery = (gallery) => {
  if (gallery == null) {
    return {};
  }
  let imageArray = new Array();
  for (const photo of gallery) {
    imageArray.push(photo.image.url);
  }
  return {
    image: imageArray
  };
};
const Photo = (photo) => {
  return photo && {
    image: photo.image.url
  };
};

const Performer = (performers) => {
  return performers && {
    "performer": {
      "@type": "PerformingGroup",
      "name": performers.join(" and ")
    }
  };
};
const Organization = (org) => {
  return org && {
    "organizer": {
      "@type": "Organization",
      "name": org.name,
      "url": org.url
    }
  };
};

const Offer = (offer) => {
  return offer && {
    "offers": {
      "@type": "Offer",
      "url": offer.url,
      "priceCurrency": offer.priceCurrency,
      "price": offer.price,
      "priceValidUntil": offer.priceValidUntil,
      "itemCondition": offer.itemCondition,
      "availability": offer.availability
    }
  };
};

var __defProp$2 = Object.defineProperty;
var __defProps$2 = Object.defineProperties;
var __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;
var __hasOwnProp$2 = Object.prototype.hasOwnProperty;
var __propIsEnum$2 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$2 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$2.call(b, prop))
      __defNormalProp$2(a, prop, b[prop]);
  if (__getOwnPropSymbols$2)
    for (var prop of __getOwnPropSymbols$2(b)) {
      if (__propIsEnum$2.call(b, prop))
        __defNormalProp$2(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));
const Event = (data, schemaType) => {
  return __spreadValues$2(__spreadValues$2(__spreadValues$2(__spreadProps$2(__spreadValues$2(__spreadValues$2(__spreadValues$2({}, BaseSchema(data, schemaType != null ? schemaType : "Event")), PhotoGallery(data.document.photoGallery)), Location({
    name: data.document.geomodifier,
    address: data.document.address
  })), {
    startDate: data.document.c_startDate,
    endDate: data.document.c_endDate,
    description: data.document.description,
    eventAttendanceMode: data.document.attendance,
    eventStatus: data.document.eventStatus
  }), Performer(data.document.performers)), Organization({
    name: data.document.organizerName
  })), Offer({
    url: "",
    priceCurrency: data.document.c_currency,
    price: data.document.price,
    priceValidUntil: data.document.expirationDate,
    itemCondition: data.document.stockStatus,
    availability: data.document.availabilityDate
  }));
};

const OpeningHours = (hours) => {
  if (hours == null) {
    return {};
  }
  let hoursMap = /* @__PURE__ */ new Map();
  hoursMap = getHoursByDay(hours.monday, hoursMap, "Mo");
  hoursMap = getHoursByDay(hours.tuesday, hoursMap, "Tu");
  hoursMap = getHoursByDay(hours.wednesday, hoursMap, "We");
  hoursMap = getHoursByDay(hours.thursday, hoursMap, "Th");
  hoursMap = getHoursByDay(hours.friday, hoursMap, "Fr");
  hoursMap = getHoursByDay(hours.saturday, hoursMap, "Sa");
  hoursMap = getHoursByDay(hours.sunday, hoursMap, "Su");
  let hoursArray = new Array();
  for (const [interval, days] of hoursMap) {
    let daysOfWeek = days.join(",");
    hoursArray.push(daysOfWeek + " " + interval);
  }
  return {
    openingHours: hoursArray
  };
};
const getHoursByDay = (hours, hoursMap, day) => {
  var _a, _b;
  if (hours.isClosed == true) {
    let interval = "00:00-00:00";
    let days = (_a = hoursMap.get(interval)) != null ? _a : Array();
    days.push(day);
    hoursMap.set(interval, days);
    return hoursMap;
  }
  for (let i = 0; i < hours.openIntervals.length; i++) {
    let interval = hours.openIntervals[i].start + "-" + hours.openIntervals[i].end;
    let days = (_b = hoursMap.get(interval)) != null ? _b : Array();
    days.push(day);
    hoursMap.set(interval, days);
  }
  return hoursMap;
};

var __defProp$1 = Object.defineProperty;
var __defProps$1 = Object.defineProperties;
var __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;
var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
var __propIsEnum$1 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$1 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$1.call(b, prop))
      __defNormalProp$1(a, prop, b[prop]);
  if (__getOwnPropSymbols$1)
    for (var prop of __getOwnPropSymbols$1(b)) {
      if (__propIsEnum$1.call(b, prop))
        __defNormalProp$1(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));
const LocalBusiness = (data, schemaType) => {
  return __spreadProps$1(__spreadValues$1(__spreadValues$1(__spreadValues$1(__spreadValues$1({}, BaseSchema(data, schemaType != null ? schemaType : "LocalBusiness")), Address(data.document.address)), OpeningHours(data.document.hours)), PhotoGallery(data.document.photoGallery)), {
    description: data.document.description,
    telephone: data.document.mainPhone,
    email: data.document.email
  });
};

const Review = (review) => {
  return review && {
    "review": {
      "@type": "Review",
      "reviewRating": {
        "@type": "Rating",
        "ratingValue": review.ratingValue,
        "bestRating": review.bestRating
      },
      "author": {
        "@type": "Person",
        "name": review.author
      }
    }
  };
};
const AggregateRating = (rating) => {
  return rating && {
    "aggregateRating": {
      "@type": "AggregateRating",
      "ratingValue": rating.ratingValue,
      "reviewCount": rating.reviewCount
    }
  };
};

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const Product = (data, schemaType) => {
  return __spreadProps(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, BaseSchema(data, schemaType != null ? schemaType : "Product")), PhotoGallery(data.document.photoGallery)), Review(data.document.c_reviews)), AggregateRating(data.document.c_aggregateRating)), Offer({
    url: "",
    priceCurrency: data.document.c_currency,
    price: data.document.price,
    priceValidUntil: data.document.expirationDate,
    itemCondition: data.document.stockStatus,
    availability: data.document.availabilityDate
  })), {
    description: data.document.description,
    sku: data.document.sku,
    mpn: data.document.mpn,
    brand: {
      "@type": "Brand",
      "name": data.document.brand
    }
  });
};

export { Address, AggregateRating, BaseSchema, Event, LocalBusiness, Location, Offer, OpeningHours, Organization, Performer, Photo, PhotoGallery, Product, Review, SchemaWrapper };
//# sourceMappingURL=index.mjs.map
