declare const SchemaWrapper: (json: any) => string;

declare const BaseSchema: (data: any, schemaType: string) => {
    '@context': string;
    '@type': string;
    name: any;
};

declare const Event: (data: any, schemaType?: string) => {
    offers?: {
        "@type": string;
        url: string | undefined;
        priceCurrency: string | undefined;
        price: string | undefined;
        priceValidUntil: string | undefined;
        itemCondition: string | undefined;
        availability: string | undefined;
    } | undefined;
    organizer?: {
        "@type": string;
        name: string | undefined;
        url: string | undefined;
    } | undefined;
    performer?: {
        "@type": string;
        name: string;
    } | undefined;
    startDate: any;
    endDate: any;
    description: any;
    eventAttendanceMode: any;
    eventStatus: any;
    address?: {
        "@type": string;
        streetAddress: string;
        addressLocality: string;
        addressRegion: string;
        postalCode: string;
        addressCountry: string;
    } | undefined;
    "@type": string;
    name: any;
    image?: undefined;
    '@context': string;
} | {
    offers?: {
        "@type": string;
        url: string | undefined;
        priceCurrency: string | undefined;
        price: string | undefined;
        priceValidUntil: string | undefined;
        itemCondition: string | undefined;
        availability: string | undefined;
    } | undefined;
    organizer?: {
        "@type": string;
        name: string | undefined;
        url: string | undefined;
    } | undefined;
    performer?: {
        "@type": string;
        name: string;
    } | undefined;
    startDate: any;
    endDate: any;
    description: any;
    eventAttendanceMode: any;
    eventStatus: any;
    address?: {
        "@type": string;
        streetAddress: string;
        addressLocality: string;
        addressRegion: string;
        postalCode: string;
        addressCountry: string;
    } | undefined;
    "@type": string;
    name: any;
    image: string[];
    '@context': string;
};

declare const LocalBusiness: (data: any, schemaType?: string) => {
    description: any;
    telephone: any;
    email: any;
    image?: undefined;
    openingHours?: undefined;
    address?: {
        "@type": string;
        streetAddress: string;
        addressLocality: string;
        addressRegion: string;
        postalCode: string;
        addressCountry: string;
    } | undefined;
    '@context': string;
    '@type': string;
    name: any;
} | {
    description: any;
    telephone: any;
    email: any;
    image: string[];
    openingHours?: undefined;
    address?: {
        "@type": string;
        streetAddress: string;
        addressLocality: string;
        addressRegion: string;
        postalCode: string;
        addressCountry: string;
    } | undefined;
    '@context': string;
    '@type': string;
    name: any;
} | {
    description: any;
    telephone: any;
    email: any;
    image?: undefined;
    openingHours: string[];
    address?: {
        "@type": string;
        streetAddress: string;
        addressLocality: string;
        addressRegion: string;
        postalCode: string;
        addressCountry: string;
    } | undefined;
    '@context': string;
    '@type': string;
    name: any;
} | {
    description: any;
    telephone: any;
    email: any;
    image: string[];
    openingHours: string[];
    address?: {
        "@type": string;
        streetAddress: string;
        addressLocality: string;
        addressRegion: string;
        postalCode: string;
        addressCountry: string;
    } | undefined;
    '@context': string;
    '@type': string;
    name: any;
};

declare const Product: (data: any, schemaType?: string) => {
    description: any;
    sku: any;
    mpn: any;
    brand: {
        "@type": string;
        name: any;
    };
    offers?: {
        "@type": string;
        url: string | undefined;
        priceCurrency: string | undefined;
        price: string | undefined;
        priceValidUntil: string | undefined;
        itemCondition: string | undefined;
        availability: string | undefined;
    } | undefined;
    aggregateRating?: {
        "@type": string;
        ratingValue: string | undefined;
        reviewCount: string | undefined;
    } | undefined;
    review?: {
        "@type": string;
        reviewRating: {
            "@type": string;
            ratingValue: string | undefined;
            bestRating: string | undefined;
        };
        author: {
            "@type": string;
            name: string | undefined;
        };
    } | undefined;
    image?: undefined;
    '@context': string;
    '@type': string;
    name: any;
} | {
    description: any;
    sku: any;
    mpn: any;
    brand: {
        "@type": string;
        name: any;
    };
    offers?: {
        "@type": string;
        url: string | undefined;
        priceCurrency: string | undefined;
        price: string | undefined;
        priceValidUntil: string | undefined;
        itemCondition: string | undefined;
        availability: string | undefined;
    } | undefined;
    aggregateRating?: {
        "@type": string;
        ratingValue: string | undefined;
        reviewCount: string | undefined;
    } | undefined;
    review?: {
        "@type": string;
        reviewRating: {
            "@type": string;
            ratingValue: string | undefined;
            bestRating: string | undefined;
        };
        author: {
            "@type": string;
            name: string | undefined;
        };
    } | undefined;
    image: string[];
    '@context': string;
    '@type': string;
    name: any;
};

declare type Address = {
    line1: string;
    city: string;
    region: string;
    postalCode: string;
    countryCode: string;
};
declare const Address: (address?: Address) => {
    address: {
        "@type": string;
        streetAddress: string;
        addressLocality: string;
        addressRegion: string;
        postalCode: string;
        addressCountry: string;
    };
} | undefined;
declare type Location = {
    name?: string;
    address?: Address;
};
declare const Location: (location?: Location) => {
    address?: {
        "@type": string;
        streetAddress: string;
        addressLocality: string;
        addressRegion: string;
        postalCode: string;
        addressCountry: string;
    } | undefined;
    "@type": string;
    name: string | undefined;
} | undefined;

declare type Hours = {
    monday: DayHours;
    tuesday: DayHours;
    wednesday: DayHours;
    thursday: DayHours;
    friday: DayHours;
    saturday: DayHours;
    sunday: DayHours;
};
declare type DayHours = {
    isClosed: boolean;
    openIntervals: Array<openInterval>;
};
declare type openInterval = {
    start: string;
    end: string;
};
declare const OpeningHours: (hours?: Hours) => {
    openingHours?: undefined;
} | {
    openingHours: string[];
};

declare type Offer = {
    url?: string;
    priceCurrency?: string;
    price?: string;
    priceValidUntil?: string;
    itemCondition?: string;
    availability?: string;
};
declare const Offer: (offer?: Offer) => {
    offers: {
        "@type": string;
        url: string | undefined;
        priceCurrency: string | undefined;
        price: string | undefined;
        priceValidUntil: string | undefined;
        itemCondition: string | undefined;
        availability: string | undefined;
    };
} | undefined;

declare type Performer = Array<string>;
declare const Performer: (performers?: Performer) => {
    performer: {
        "@type": string;
        name: string;
    };
} | undefined;
declare type Organization = {
    name?: string;
    url?: string;
};
declare const Organization: (org?: Organization) => {
    organizer: {
        "@type": string;
        name: string | undefined;
        url: string | undefined;
    };
} | undefined;

declare type PhotoGallery = Array<Photo>;
declare const PhotoGallery: (gallery?: PhotoGallery) => {
    image?: undefined;
} | {
    image: string[];
};
declare type Photo = {
    image: {
        url: string;
    };
};
declare const Photo: (photo?: Photo) => {
    image: string;
} | undefined;

declare type Review = {
    ratingValue?: string;
    bestRating?: string;
    author?: string;
};
declare const Review: (review?: Review) => {
    review: {
        "@type": string;
        reviewRating: {
            "@type": string;
            ratingValue: string | undefined;
            bestRating: string | undefined;
        };
        author: {
            "@type": string;
            name: string | undefined;
        };
    };
} | undefined;
declare type AggregateRating = {
    ratingValue?: string;
    reviewCount?: string;
};
declare const AggregateRating: (rating?: AggregateRating) => {
    aggregateRating: {
        "@type": string;
        ratingValue: string | undefined;
        reviewCount: string | undefined;
    };
} | undefined;

export { Address, AggregateRating, BaseSchema, DayHours, Event, Hours, LocalBusiness, Location, Offer, OpeningHours, Organization, Performer, Photo, PhotoGallery, Product, Review, SchemaWrapper };
